import{y as x,r as a,j as t}from"./app-3202f596.js";import j from"./ConfirmDialog-56d74f25.js";import{d as h,a as y}from"./Check-798d69d4.js";import{u as C}from"./useMutation-fe1021bb.js";import{L as g}from"./LoadingButton-f9168bcf.js";import"./createTheme-e443a688.js";import"./styled-6ddd3ae9.js";import"./Modal-012e7dea.js";import"./TransitionGroupContext-bf46694f.js";import"./useId-95af0284.js";import"./Typography-58006bdd.js";import"./extendSxProp-5b301ce9.js";import"./Button-69efd48b.js";import"./ButtonBase-bd429d2a.js";import"./createSvgIcon-5ec9d790.js";import"./createSvgIcon-74e13a21.js";const S=()=>C({mutationFn:async({id:s,props:o})=>{try{const{data:e}=await axios.patch(route("repairs.update.called",s),o);return Promise.resolve(e)}catch(e){return Promise.reject(e)}},onSuccess:()=>{x.reload({only:["repairs"]})}}),U=({repair:s})=>{const o="is_called",[e,r]=a.useState(!1),[m,i]=a.useState(!1),[n,k]=a.useState({[o]:!1}),{mutate:l,isPending:d,isSuccess:c}=S();a.useEffect(()=>{console.log("!!repair[field]",s),r(!!s[o])},[]),a.useEffect(()=>{c&&r(!e)},[c]);const u=async()=>{e?i(!0):await f()},p=()=>{l({id:s.id,props:{...n,[o]:!1}})},f=async()=>{l({id:s.id,props:{...n,[o]:!0}})};return t.jsxs(t.Fragment,{children:[t.jsx(j,{title:"Unmarked Called?",open:m,setOpen:i,onConfirm:p,children:"Are you sure? It will be unmarked as Called."}),t.jsx(g,{loading:d,color:e?"success":"error",size:"small",variant:"text",onClick:u,children:e?t.jsx(t.Fragment,{children:t.jsx(h,{})}):t.jsx(y,{})})]})};export{U as default};
