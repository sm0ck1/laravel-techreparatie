import{y as x,r as a,j as t}from"./app-2d73ea55.js";import j from"./ConfirmDialog-1a912fd8.js";import{d as h,a as y}from"./Check-edb6ead8.js";import{u as C}from"./useMutation-463f253a.js";import{L as S}from"./LoadingButton-a5f2cb57.js";import"./createTheme-156a7933.js";import"./styled-da10e864.js";import"./Modal-75514fbd.js";import"./TransitionGroupContext-391a7c7f.js";import"./useId-f0ba7148.js";import"./Typography-6359d7c6.js";import"./extendSxProp-73dc8921.js";import"./Button-44ae99c3.js";import"./ButtonBase-da9039f2.js";import"./createSvgIcon-f157a86e.js";import"./createSvgIcon-fb97631e.js";const g=()=>C({mutationFn:async({id:o,props:s})=>{try{const{data:e}=await axios.patch(route("repairs.update.called",o),s);return Promise.resolve(e)}catch(e){return Promise.reject(e)}},onSuccess:()=>{x.reload({only:["repairs"]})}}),U=({repair:o})=>{const s="is_called",[e,r]=a.useState(!1),[m,i]=a.useState(!1),[n,k]=a.useState({[s]:!1}),{mutate:l,isPending:d,isSuccess:c}=g();a.useEffect(()=>{r(!!o[s])},[]),a.useEffect(()=>{c&&r(!e)},[c]);const u=async()=>{e?i(!0):await f()},p=()=>{l({id:o.id,props:{...n,[s]:!1}})},f=async()=>{l({id:o.id,props:{...n,[s]:!0}})};return t.jsxs(t.Fragment,{children:[t.jsx(j,{title:"Unmarked Called?",open:m,setOpen:i,onConfirm:p,children:"Are you sure? It will be unmarked as Called."}),t.jsx(S,{loading:d,color:e?"success":"error",size:"small",variant:"text",onClick:u,children:e?t.jsx(t.Fragment,{children:t.jsx(h,{})}):t.jsx(y,{})})]})};export{U as default};
